<?xml version="1.0" encoding="utf-8"?>
<!-- asdoc\WarningView.mxml -->
<!---
A dialog to display an warning message to the user. For convenience the static
method 'show' can be used to invoke this view.
Optionally a proceed function can be defined to ask the user if (s)he wants to
continue inspite of the warning
-->
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
               close="close();"
               width="500" height="280" title="Warning"
               skinClass="org.everest.flex.ui.skins.WarningViewSkin">
    <s:layout>
        <s:VerticalLayout paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10" />
    </s:layout>
    <s:states>
        <s:State name="normal"/>
        <s:State name="askToProceed"/>
    </s:states>
    <fx:Script>
        <![CDATA[
            import mx.core.FlexGlobals;
            import mx.core.IFlexDisplayObject;
            import mx.managers.CursorManager;
            import mx.managers.PopUpManager;

            private var _message:String;

            [Bindable]
            private var _proceedFunction:Function;

            [Bindable]
            private var cancelFunction:Function;

            /**
             * Static convenience function to display this warning dialog.
             *
             * @param warningMessage the warning message to be shown
             * @param proceedFunction a function to be called if user presses on 'yes'
             * @param cancelFunction a function to be called if user presses on 'No'
             */
            public static function show(warningMessage:String, proceedFunction:Function=null, cancelFunction:Function=null):void{
                var parent:DisplayObject = Sprite(FlexGlobals.topLevelApplication);
                var  p:IFlexDisplayObject = PopUpManager.createPopUp(parent, WarningView, true);
                WarningView(p).message = warningMessage;
                WarningView(p).proceedFunction = proceedFunction;
                WarningView(p).cancelFunction = cancelFunction;
                PopUpManager.centerPopUp(p);
                parent.addEventListener(Event.REMOVED_FROM_STAGE, function(evnent:Event):void{PopUpManager.removePopUp(p)});
                CursorManager.removeBusyCursor();
            }

            public function set proceedFunction(f:Function):void
            {
                if (f != null)
                {
                    this._proceedFunction = f;
                    setCurrentState("askToProceed");
                }
            }

            //Handle the close button and Cancel button.
            public function close():void {
                PopUpManager.removePopUp(this);
            }

            [Bindable]
            public function get message():String
            {
                return _message;
            }

            public function set message(value:String):void
            {
                if (value != null)
                {
                    value = value.replace( /--/g,"\n\n");
                }
                _message = value;
            }


            protected function cancelHandler(event:MouseEvent):void
            {
                if (cancelFunction != null)
                {
                    cancelFunction();
                }

                close();
            }

            protected function proceedHandler(event:MouseEvent):void
            {
                _proceedFunction();
                close();
            }

        ]]>
    </fx:Script>
    <s:Label  text="A warning has occured:" fontWeight="bold"/>
    <s:Scroller width="100%" height="100%">
        <s:RichEditableText width="100%" height="100%" minHeight="80" backgroundColor="#F4F4F4" editable="false"
                            paddingTop="5" paddingRight="5" paddingBottom="5" paddingLeft="5"
                            text="{message}"
                    verticalAlign="top"/>
    </s:Scroller>
    <s:Label text="Do you want to proceed?" fontWeight="bold" includeIn="askToProceed"/>
    <s:HGroup>
        <s:Button label="Close" click="close()" excludeFrom="askToProceed"/>
        <s:Button label="Yes" click="proceedHandler(event)" includeIn="askToProceed" />
        <s:Button label="No" click="cancelHandler(event)" includeIn="askToProceed"/>

    </s:HGroup>
</s:TitleWindow>